/*
 * Updated for unflattened 4x9 matrix layout
 * Original Sweep + extra left thumb key
 */

#include "dt-bindings/zmk/matrix_transform.h"
#include "sweep35-layouts.dtsi"

physical_layout0 {
    transform = <&default_transform>;
    kscan = <&kscan0>;
};

&kscan0 {
    compatible = "zmk,kscan-gpio-direct";
    input-gpios =
        <&pro_micro 7  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 0
        <&pro_micro 18 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 1
        <&pro_micro 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 2
        <&pro_micro 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 3
        <&pro_micro 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 4
        <&pro_micro 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 5
        <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 6
        <&pro_micro 16 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 7
        <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 8
        <&pro_micro 1  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 9
        <&pro_micro 2  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 10
        <&pro_micro 3  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 11
        <&pro_micro 4  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 12
        <&pro_micro 5  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 13
        <&pro_micro 6  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 14
        <&pro_micro 0  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 15
        <&pro_micro 8  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>,  // 16
        <&pro_micro 9  (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;  // 17
};

&{/} {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix-transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <9>;
        map = <
            // Row 0
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8)
            // Row 1
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8)
            // Row 2
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8)
            // Row 3
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8)
        >;
    };
};
